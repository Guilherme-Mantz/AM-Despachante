@page "/relatorios/veiculos"
@attribute [Authorize(Roles = "ADMIN")]

@rendermode InteractiveServer

@using AMDespachante.Application.Interfaces
@using AMDespachante.Application.ViewModels.Relatorios
@using Microsoft.AspNetCore.Authorization

@inject IRelatorioAppService RelatorioService

<MudContainer Class="mt-2 mb-4">
    <MudText Typo="Typo.h5" Class="mb-4">Relatório de Veículos</MudText>

    <MudPaper Class="pa-4 mb-4">
        <MudGrid>
            <MudItem xs="12" md="4">
                <MudDateRangePicker Label="Período" @bind-DateRange="dateRange" />
            </MudItem>
            <MudItem xs="12" md="2">
                <MudButton Variant="Variant.Filled" Color="Color.Primary"
                           OnClick="CarregarRelatorio" Class="mt-4">
                    Gerar Relatório
                </MudButton>
            </MudItem>
        </MudGrid>
    </MudPaper>

    @if (viewModel != null)
    {
        <MudCard Class="mb-4">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Resumo de Veículos</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="12" md="6">
                        <MudPaper Elevation="0" Class="pa-4 text-center">
                            <MudText Typo="Typo.subtitle1">Total de Veículos</MudText>
                            <MudText Typo="Typo.h5" Color="Color.Primary">
                                @viewModel.TotalVeiculos
                            </MudText>
                        </MudPaper>
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudPaper Elevation="0" Class="pa-4 text-center">
                            <MudText Typo="Typo.subtitle1">Veículos Atendidos no Período</MudText>
                            <MudText Typo="Typo.h5" Color="Color.Success">
                                @viewModel.VeiculosEmAtendimento
                            </MudText>
                        </MudPaper>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
        </MudCard>

        <MudGrid>
            <MudItem xs="12" md="6">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Veículos por Marca</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudTable Items="@viewModel.VeiculosPorMarca" Hover="true" Striped="true">
                            <HeaderContent>
                                <MudTh>Marca</MudTh>
                                <MudTh>Quantidade</MudTh>
                                <MudTh>Percentual</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd>@context.Marca</MudTd>
                                <MudTd>@context.Quantidade</MudTd>
                                <MudTd>@context.Percentual.ToString("0.0")%</MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <MudItem xs="12" md="6">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Veículos por Ano</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudTable Items="@viewModel.VeiculosPorAno" Hover="true" Striped="true">
                            <HeaderContent>
                                <MudTh>Ano</MudTh>
                                <MudTh>Quantidade</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd>@(context.Ano == 0 ? "Não informado" : context.Ano.ToString())</MudTd>
                                <MudTd>@context.Quantidade</MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <MudItem xs="12">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Veículos Mais Atendidos</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudTable Items="@viewModel.VeiculosMaisAtendidos" Hover="true" Striped="true">
                            <HeaderContent>
                                <MudTh>Placa</MudTh>
                                <MudTh>Modelo</MudTh>
                                <MudTh>Marca</MudTh>
                                <MudTh>Ano</MudTh>
                                <MudTh>Qtd Atendimentos</MudTh>
                                <MudTh>Valor Total</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd>@context.Placa</MudTd>
                                <MudTd>@context.Modelo</MudTd>
                                <MudTd>@context.Marca</MudTd>
                                <MudTd>@(context.Ano == 0 ? "Não informado" : context.Ano.ToString())</MudTd>
                                <MudTd>@context.QuantidadeAtendimentos</MudTd>
                                <MudTd>@context.ValorTotalServicos.ToString("C")</MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>
    }
</MudContainer>

@code {
    private DateRange dateRange = new DateRange(DateTime.Now.AddMonths(-1), DateTime.Now);
    private RelatorioVeiculosViewModel viewModel;

    private async Task CarregarRelatorio()
    {
        var filtro = new FiltroRelatorioViewModel
            {
                DataInicio = dateRange.Start.GetValueOrDefault(),
                DataFim = dateRange.End.GetValueOrDefault()
            };

        viewModel = await RelatorioService.RelatorioVeiculos(filtro);
    }
}